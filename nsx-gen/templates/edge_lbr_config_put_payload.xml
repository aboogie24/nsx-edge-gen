  <loadBalancer>
   <enabled>true</enabled>
   <enableServiceInsertion>false</enableServiceInsertion>
   <accelerationEnabled>false</accelerationEnabled>
   
   {% for pool in routed_components  if pool['useVIP'] == True %}
   {% set outer_index = loop.index %}  
   {% for port in pool['transport']['egress']['port'].split(',') %}
   {% set port_index = loop.index %} 
   <pool>
    <poolId>pool-{{outer_index}}{{port_index}}</poolId>
    <name>{{ pool['name']}}{{outer_index}}{{port_index}}-Pool</name>
    <algorithm>round-robin</algorithm>
    <transparent>false</transparent>
    <monitorId>{{ pool['monitor_id']}}</monitorId>
     {% for ip in pool['ips'].split(',') %}
    <member>
       <memberId>member-{{outer_index}}{{port_index}}{{loop.index}}</memberId>
       <ipAddress>{{ ip }}</ipAddress>
       <weight>1</weight>
       {% if pool['transport']['egress']['monitor_port'] %}
       <monitorPort>{{ pool['transport']['egress']['monitor_port'] }}</monitorPort>
       {% else %}
       <monitorPort>{{ port }}</monitorPort>
       {% endif %}
       <port>{{ port }}</port>
       <maxConn>0</maxConn>
       <minConn>0</minConn>
       <condition>enabled</condition>
       <name>{{ pool['name']}}-member-{{outer_index}}{{port_index}}{{loop.index}}</name>
    </member>
    {% endfor %}
   </pool> 
    {% endfor %}
   {% endfor %}   

   {% for appProfile in appProfileMap.values() %}
   <applicationProfile>
      <applicationProfileId>{{ appProfile['id'] }}</applicationProfileId>
      <name>{{ appProfile['name'] }}</name>
      <insertXForwardedFor>true</insertXForwardedFor>
      <sslPassthrough>{{ appProfile['sslPassthrough'] }}</sslPassthrough>
      <template>{{ appProfile['template'] }}</template>
      {% if 'HTTPS' in appProfile['name'] or 'TCPS' in appProfile['name'] %}
        <clientSsl>
            <ciphers>DEFAULT</ciphers>
            <clientAuth>ignore</clientAuth>
            <serviceCertificate>{{ nsx_edge['cert_id'] }}</serviceCertificate>
        </clientSsl>
      {% endif %}
      <serverSslEnabled>{{ appProfile['serverSslEnabled'] }}</serverSslEnabled>
   </applicationProfile>
   {% endfor %}
   {% for monitor in monitorMap.values() %}           
   <monitor>
      <monitorId>{{monitor['id']}}</monitorId>
      <type>{{monitor['type']}}</type>
      <interval>5</interval>
      <timeout>15</timeout>
      <maxRetries>3</maxRetries>
      {% if monitor['type'] != 'tcp' %}
        <method>GET</method>
        <url>{{monitor['url']}}</url>
      {% endif %}
      <name>{{monitor['name']}}</name>
   </monitor>
   {% endfor %}
   {% for name, appRule in appRuleMap.iteritems() %}
   <applicationRule>
        <applicationRuleId>{{ appRule['id'] }}</applicationRuleId>
        <name>{{ name }}</name>
        <script>{{ appRule['script']  }}</script>
    </applicationRule>
   {% endfor %}
   {% for virtServer in routed_components if virtServer['name'] != 'opsmgr'%}
   
     {% set outer_index = loop.index %}    
     {% for port in virtServer['transport']['ingress']['port'].split(',') %}

   <virtualServer>
    <virtualServerId>virtualServer-{{outer_index}}{{loop.index}}</virtualServerId>
    <name>VIP-{{virtServer['name']}}-{{virtServer['transport']['ingress']['protocol']}}-{{outer_index}}{{loop.index}}</name>
    <enabled>true</enabled>
    <ipAddress>{{virtServer['uplink_details']['uplink_ip']}}</ipAddress>
    <protocol>{{virtServer['transport']['ingress']['protocol']}}</protocol>
    <port>{{ port }}</port>
    <connectionLimit>0</connectionLimit>
    <connectionRateLimit>0</connectionRateLimit>
    <defaultPoolId>pool-{{outer_index}}{{loop.index}}</defaultPoolId>
    <applicationProfileId>{{virtServer['app_profile']['id']}}</applicationProfileId>
    <enableServiceInsertion>false</enableServiceInsertion>
    <accelerationEnabled>false</accelerationEnabled>
    {% for app_rule_id in virtServer['app_rules'] %}
      <applicationRuleId>{{ app_rule_id }}</applicationRuleId>
    {% endfor %}
   </virtualServer>
   {% endfor %}
   {% endfor %}

   <logging>
      <enable>true</enable>
      <logLevel>info</logLevel>
   </logging>
</loadBalancer>